{"version":3,"sources":["API/API.js","components/Pages/MoviesPage/MoviesPage.module.css","components/Pages/MoviesPage/MoviesPage.jsx"],"names":["APIKey","BASE_URL","APImovieDay","fetch","then","res","json","APImovieId","id","APImovieActors","APImovieReviews","APImovieSearch","search","module","exports","MoviesPage","useState","searcName","setSearcName","formName","setFormName","listMovies","setListMovies","url","useRouteMatch","history","useHistory","location","useLocation","queryOpder","URLSearchParams","get","useEffect","APImovie","movie","className","s","Searchbar","SearchForm","onSubmit","e","preventDefault","trim","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","push","type","SearchForm__button","SearchForm__button__label","SearchForm__input","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","list__movies","results","map","item__movie","to","pathname","state","from","label","item__link","original_title"],"mappings":"yIAAA,0KACA,IAAMA,EAAS,mCACTC,EAAW,+BAEV,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,uCAA2CD,IAAUI,MAAK,SAACC,GAAD,OACpEA,EAAIC,UAID,SAASC,EAAWC,GACzB,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,EAAtB,oBAAoCR,EAApC,oBAA6DI,MACvE,SAACC,GAAD,OAASA,EAAIC,UAIV,SAASG,EAAeD,GAC7B,OAAOL,MAAM,GAAD,OACPF,EADO,kBACWO,EADX,4BACiCR,EADjC,oBAEVI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAGf,SAASI,EAAgBF,GAC9B,OAAOL,MAAM,GAAD,OACPF,EADO,kBACWO,EADX,4BACiCR,EADjC,oBAEVI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAGf,SAASK,EAAeC,GAC7B,OAAOT,MAAM,GAAD,OACPF,EADO,iCAC0BD,EAD1B,iCACyDY,EADzD,gCAEVR,MAAK,SAACC,GAAD,OAASA,EAAIC,Y,mBC9BtBO,EAAOC,QAAU,CAAC,UAAY,8BAA8B,WAAa,+BAA+B,mBAAqB,uCAAuC,oBAAoB,sCAAsC,0BAA4B,8CAA8C,kBAAoB,sCAAsC,mBAAmB,qCAAqC,aAAe,iCAAiC,WAAa,+BAA+B,YAAc,kC,gKCSrf,SAASC,IAAc,IAAD,EACnC,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAAoCJ,mBAAS,MAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACQC,EAAQC,cAARD,IAEFE,EAAUC,cACVC,EAAWC,cACXC,EAAa,IAAIC,gBAAgBH,EAASf,QAAQmB,IAAI,SAsC5D,OAZAC,qBAAU,WACHb,GACLc,IAAwBd,GAAUf,MAAK,SAAC8B,GAAD,OACrCZ,EAAc,eAAKY,SAEpB,CAACf,IAEJa,qBAAU,WACJH,GAAYX,EAAaW,GAC7BT,EAAYS,KACX,CAACA,IAGF,qCACE,qBAAKM,UAAWC,IAAEC,UAAlB,SACE,uBAAMF,UAAWC,IAAEE,WAAYC,SAnCf,SAACC,GAErB,GADAA,EAAEC,iBACuB,KAArBxB,EAAUyB,OACZ,OAAOC,IAAMC,MAAM,oIAA4B,CAC7CC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGdhC,EAAYH,GACZQ,EAAQ4B,KAAR,2BACK1B,GADL,IAEEf,OAAO,SAAD,OAAWK,OAmBf,UACE,wBAAQqC,KAAK,SAASnB,UAAWC,IAAEmB,mBAAnC,SACE,sBAAMpB,UAAWC,IAAEoB,0BAAnB,8CAGF,uBACErB,UAAWC,IAAEqB,kBACbH,KAAK,OACLI,MAAOzC,EACP0C,SAhDY,SAACnB,GACrBtB,EAAasB,EAAEoB,cAAcF,MAAMG,gBAgD3BC,aAAa,MACbC,WAAS,EACTC,YAAY,uBAIlB,8BACE,oBAAI7B,UAAWC,IAAE6B,aAAjB,SACG5C,IAAU,OACTA,QADS,IACTA,GADS,UACTA,EAAY6C,eADH,aACT,EAAqBC,KAAI,SAAC3B,GAAD,OACvB,oBAAeL,UAAWC,IAAEgC,YAA5B,SACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAK/C,EAAL,YAAYiB,EAAEhC,IACtB+D,MAAO,CACLC,KAAM,CAAE7C,WAAU8C,MAAO,gFAG7BtC,UAAWC,IAAEsC,WAPf,SASGlC,EAAEmC,kBAVEnC,EAAEhC","file":"static/js/MoviesPage.4ec5efbb.chunk.js","sourcesContent":["/** @format */\nconst APIKey = \"bbb8d7b7bccecfd8830020668d0f04c2\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\nexport function APImovieDay() {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${APIKey}`).then((res) =>\n    res.json()\n  );\n}\n\nexport function APImovieId(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${APIKey}&language=en-US`).then(\n    (res) => res.json()\n  );\n}\n\nexport function APImovieActors(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${APIKey}&language=en-US`\n  ).then((res) => res.json());\n}\n\nexport function APImovieReviews(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${APIKey}&language=en-US`\n  ).then((res) => res.json());\n}\n\nexport function APImovieSearch(search) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${APIKey}&language=en-US&query=${search}&page=1&include_adult=false`\n  ).then((res) => res.json());\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"MoviesPage_Searchbar__2PVQS\",\"SearchForm\":\"MoviesPage_SearchForm__3D6yb\",\"SearchForm__button\":\"MoviesPage_SearchForm__button__3JUO8\",\"SearchForm-button\":\"MoviesPage_SearchForm-button__1ditL\",\"SearchForm__button__label\":\"MoviesPage_SearchForm__button__label__1f57K\",\"SearchForm__input\":\"MoviesPage_SearchForm__input__3y2S-\",\"SearchForm-input\":\"MoviesPage_SearchForm-input__2fdxO\",\"list__movies\":\"MoviesPage_list__movies__R3KM8\",\"item__link\":\"MoviesPage_item__link__3VRt5\",\"item__movie\":\"MoviesPage_item__movie__1SzjH\"};","/** @format */\n\nimport { useState, useEffect } from \"react\";\nimport { Link, useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport s from \"../MoviesPage/MoviesPage.module.css\";\n\nimport * as APImovie from \"../../../API/API\";\n\nexport default function MoviesPage() {\n  const [searcName, setSearcName] = useState(\"\");\n  const [formName, setFormName] = useState(\"\");\n\n  const [listMovies, setListMovies] = useState(null);\n  const { url } = useRouteMatch();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryOpder = new URLSearchParams(location.search).get(\"query\");\n\n  const getNameChange = (e) => {\n    setSearcName(e.currentTarget.value.toLowerCase());\n  };\n\n  const getSubmitForm = (e) => {\n    e.preventDefault();\n    if (searcName.trim() === \"\") {\n      return toast.error(\"Введите слово для поиска\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    setFormName(searcName);\n    history.push({\n      ...location,\n      search: `query=${searcName}`,\n    });\n  };\n\n  useEffect(() => {\n    if (!formName) return;\n    APImovie.APImovieSearch(formName).then((movie) =>\n      setListMovies({ ...movie })\n    );\n  }, [formName]);\n\n  useEffect(() => {\n    if (queryOpder) setSearcName(queryOpder);\n    setFormName(queryOpder);\n  }, [queryOpder]);\n\n  return (\n    <>\n      <div className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={getSubmitForm}>\n          <button type=\"submit\" className={s.SearchForm__button}>\n            <span className={s.SearchForm__button__label}>Поиск</span>\n          </button>\n\n          <input\n            className={s.SearchForm__input}\n            type=\"text\"\n            value={searcName}\n            onChange={getNameChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n        </form>\n      </div>\n      <div>\n        <ul className={s.list__movies}>\n          {listMovies &&\n            listMovies?.results?.map((e) => (\n              <li key={e.id} className={s.item__movie}>\n                <Link\n                  to={{\n                    pathname: `${url}/${e.id}`,\n                    state: {\n                      from: { location, label: \"Назад к поиску\" },\n                    },\n                  }}\n                  className={s.item__link}\n                >\n                  {e.original_title}\n                </Link>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nMoviesPage.propTypes = {\n  searcName: PropTypes.string,\n  formName: PropTypes.string,\n};\n"],"sourceRoot":""}